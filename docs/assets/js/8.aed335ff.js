(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{210:function(t,a,s){"use strict";s.r(a);var n=s(2),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"部署项目"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署项目","aria-hidden":"true"}},[t._v("#")]),t._v(" 部署项目")]),t._v(" "),s("p",[t._v("项目开发完成后需要打包部署到正式服务器上，下面分别介绍前台及后端项目的打包步骤。")]),t._v(" "),s("h2",{attrs:{id:"前台打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前台打包","aria-hidden":"true"}},[t._v("#")]),t._v(" 前台打包")]),t._v(" "),s("p",[t._v("前台项目使用 "),s("code",[t._v("vue-cli3")]),t._v(" 构建，内置了 "),s("code",[t._v("webpack4")]),t._v("，详细介绍可以去"),s("a",{attrs:{href:"https://cli.vuejs.org/zh/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("查看。打包过程极其简单，需要修改以下几个文件：")]),t._v(" "),s("ul",[s("li",[t._v("主配置文件：/vue.config.js")]),t._v(" "),s("li",[t._v("axios 网络请求配置文件：/src/utils/api.js")]),t._v(" "),s("li",[t._v("用户参数文件：/src/store/modules/user.js")])]),t._v(" "),s("h3",{attrs:{id:"主配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 主配置文件")]),t._v(" "),s("p",[t._v("首先找到根目录下面的 vue.config.js 文件，它是 vue-cli3 主配置文件，详细参数设置可以查看"),s("a",{attrs:{href:"https://cli.vuejs.org/zh/config/#vue-config-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("。\n打包时需要修改的参数为 "),s("code",[t._v("publicPath")]),t._v(" 及 "),s("code",[t._v("outputDir")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("publicPath")]),t._v(" 代表部署应用包时的基本 URL，例如服务器地址为 "),s("code",[t._v("http://123.23.23.244:8080/")]),t._v(", "),s("code",[t._v("publicPath")]),t._v(" 的值等于将项目访问地址更改为 "),s("code",[t._v("http://123.23.23.244:8080/你设置的publicPath")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("outputDir")]),t._v(" 表示打包后生成的文件夹名称，需要与 "),s("code",[t._v("publicPath")]),t._v(" 名称保持一致，区别在于没有 "),s("code",[t._v("publicPath")]),t._v(" 的\n单斜杠。")]),t._v(" "),s("h3",{attrs:{id:"网络请求配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络请求配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 网络请求配置文件")]),t._v(" "),s("p",[t._v("前台项目使用 "),s("code",[t._v("axios")]),t._v(" 来做网络请求，部署打包时需要将下图中的 base_url 更改为要部署服务器的后台访问地址。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005yqb1Zly1g2e0hgtnc0j328018w4ak.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"用户参数配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户参数配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户参数配置")]),t._v(" "),s("p",[t._v("系统登录时会获取用户信息，配置文件主要是 "),s("code",[t._v("user.js")]),t._v("，打包时需要修改 state 属性中的 imgUrl 属性和 prodName 属性。imgUrl 属性中的链接需要更改为要部署服务器的后台访问地址，prodName 需要与主配置文件中的 "),s("code",[t._v("publicPath")]),t._v(" 保持一致。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005yqb1Zly1g2e0mnd3czj328018w4bq.jpg",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"打包并部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包并部署","aria-hidden":"true"}},[t._v("#")]),t._v(" 打包并部署")]),t._v(" "),s("p",[t._v("设置完参数后，点击项目根目录下面的 package.json 文件并打开，找到 build:prod 属性，点击左侧的绿色三角按钮 Run/Debug 运行，控制台会输出进度，等待完成后就可以在项目根目录下发现一个新生成的文件夹，\n文件夹名字和设置的 "),s("code",[t._v("outputDir")]),t._v(" 内容一致，将这个文件夹放到服务器 Tomcat 下面的 webapps 文件夹下面即可。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005yqb1Zly1g2e10i1l1yj328018w47g.jpg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"后端打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端打包","aria-hidden":"true"}},[t._v("#")]),t._v(" 后端打包")]),t._v(" "),s("p",[t._v("后端项目使用 Spring Boot + Maven 构建，打包只需要修改三个文件。")]),t._v(" "),s("ul",[s("li",[t._v("Spring Boot 启动文件：src/main/java/com.stone/Application")]),t._v(" "),s("li",[t._v("Spring Boot 配置文件：src/main/resources/application.yml")]),t._v(" "),s("li",[t._v("Maven 配置文件：pom.xml")])]),t._v(" "),s("h3",{attrs:{id:"spring-boot-启动文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-启动文件","aria-hidden":"true"}},[t._v("#")]),t._v(" Spring Boot 启动文件")]),t._v(" "),s("p",[t._v("Spring Boot 默认情况下自带嵌入式容器，项目需要构建 war 文件并进行部署时需要修改启动类，继承 SpringBootServletInitializer 并重写 configure 方法，\n从而使 Tomcat 可以正常运行项目。后端项目中已经配置好了，只需要去掉注释并导入包就可以了。")]),t._v(" "),s("h3",{attrs:{id:"spring-boot-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" Spring Boot 配置文件")]),t._v(" "),s("p",[t._v("由于 application.yml 中修改的内容较多，选择由上至下的方式逐一介绍。")]),t._v(" "),s("h4",{attrs:{id:"swagger-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#swagger-配置","aria-hidden":"true"}},[t._v("#")]),t._v(" swagger 配置")]),t._v(" "),s("p",[t._v("生产环境下默认将 Swagger 接口文档关闭防止泄露接口地址其参数。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#swagger配置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("swagger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),s("h4",{attrs:{id:"前台ip地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前台ip地址","aria-hidden":"true"}},[t._v("#")]),t._v(" 前台ip地址")]),t._v(" "),s("p",[t._v("跨域请求时会对 ip 地址进行限制，设置成 服务器 ip 地址 + Tomcat 端口号。projectName 表示地市项目名称，需要设置为项目所在地市的对应缩写。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#前台ip地址")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("front")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//123.23.23.233"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8060")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("projectName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" WHSE\n")])])]),s("h4",{attrs:{id:"数据源配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据源配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据源配置")]),t._v(" "),s("p",[t._v("部署时需要将数据源更改为正式服务器地址。")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#数据源配置")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("datasource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" jdbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//123.23.23.233"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3309/database_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("?")]),t._v("useUnicode=true"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&characterEncoding")]),t._v("=utf8"),s("span",{pre:!0,attrs:{class:"token important"}},[t._v("&useSSL")]),t._v("=false\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.mysql.jdbc.Driver\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" com.alibaba.druid.pool.DruidDataSource\n")])])]),s("h3",{attrs:{id:"maven-配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maven-配置文件","aria-hidden":"true"}},[t._v("#")]),t._v(" Maven 配置文件")]),t._v(" "),s("p",[t._v("由于 "),s("code",[t._v("spring-boot-starter-web")]),t._v(" 包下会内嵌 Tomcat，但部署时打成 war 文件要放到自定义的 Tomcat 下，\n所以要去除 Spring Boot 内嵌的 Tomcat。项目中只需要找到 "),s("code",[t._v("spring-boot-starter-web")]),t._v("，去除注释就可以了。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-web"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 去除内嵌tomcat 生产环境下开启--\x3e")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.boot"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-boot-starter-tomcat"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("exclusions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("打包时增加 servlet-api 依赖，项目中需要找到注释的标签并去除。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--添加servlet的依赖 生产环境下开启--\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("javax.servlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("javax.servlet-api"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.0.1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("provided"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"打包并部署-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打包并部署-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 打包并部署")]),t._v(" "),s("p",[t._v("按照顺序将上述内容修改完成后就可以进行打包操作了。首先找到 IDEA 右侧菜单栏 Maven 选项并点击打开，找到 Plugins 下面的 clean 选项展开，点击运行 clean:clean。\n这一步骤是会删除 target 文件夹，主要是为了清空之前生成的 class 文件，保证代码的唯一性。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005yqb1Zly1g2e2u6ccrbj328018w49g.jpg",alt:""}})]),t._v(" "),s("p",[t._v("等待控制台提示 "),s("code",[t._v("BUILD SUCCESS")]),t._v(" 后代表清空完成了，之后选择上方菜单栏 Build -> Build Project 选项。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://ww1.sinaimg.cn/large/005yqb1Zly1g2e2y4qkblj32801e04ep.jpg",alt:""}})]),t._v(" "),s("p",[t._v("**切记等待右下角进度条加载完毕后再进行下一步操作。**加载完毕后再次打开右侧菜单栏，找到 war 选项并单击运行 war:war\n命令，等待控制台提示 "),s("code",[t._v("BUILD SUCCESS")]),t._v(" 就可以在 target 根目录下面找到生成的 war 文件了。将 war 文件复制到\n服务器 Tomcat 中的 webapps 文件夹内，点击 Tomcat 下 bin 文件夹中的 startup.bat 运行项目。")])])},[],!1,null,null,null);a.default=e.exports}}]);